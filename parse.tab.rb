#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'strscan'

class Parser < Racc::Parser

module_eval(<<'...end parse.y/module_eval...', 'parse.y', 169)

def initialize(src)
  @ss = StringScanner.new(src)
end

def scan
  until @ss.eos?
    if (tok = @ss.scan /\s+/)
      # nothing to do
    elsif (tok = @ss.scan /(if|while|end|else|def)/)
      yield p([tok, tok])
    elsif (tok = @ss.scan /(true|false)/)
      yield p([:BOOL, tok == 'true'])
    elsif (tok = @ss.scan /,|\(|\)|\{|\}|=>|\+|\-|\*|\/|%|>|<|==|\]\s*=|\[|\]|=/)
      tok.gsub!(/\s+/, '')
      yield p([tok, tok])
    elsif (tok = @ss.scan /"(?:[^"]|"")*"/)
      yield p([:STRING, tok.slice(1...-1)])
    elsif (tok = @ss.scan /\d+/)
      yield p([:NUMBER, tok.to_i])
    elsif (tok = @ss.scan /\w+\??/)
      yield p([:IDENTIFIER, tok])
    elsif @ss.scan /#.*$/
      # nothing to do
    end
  end

  yield p([false, ''])
end

def parse
  yyparse self, :scan
end

def self.parse(src)
  self.new(src).parse
end
...end parse.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    29,    30,    31,    27,    28,    32,    33,    34,    29,    30,
    31,    25,    35,    92,    29,    30,    31,    27,    28,    32,
    33,    35,     7,    22,    18,    71,    69,    35,     8,    35,
     9,    19,    20,    21,    23,    35,    70,    24,    29,    30,
    31,    27,    28,    32,    33,    34,    68,     7,    22,    18,
    29,    30,    31,     8,    67,     9,    19,    20,    21,    61,
    49,    35,    24,    29,    30,    31,    27,    28,    32,    33,
    34,    35,     7,    22,    18,    87,    40,    88,     8,    41,
     9,    19,    20,    21,    61,    36,    59,    24,    29,    30,
    31,    27,    28,    32,    33,    34,    29,    30,    31,    27,
    28,    32,    33,    34,    81,    76,    68,    74,   nil,    35,
    72,    73,   nil,   nil,   nil,   nil,   nil,    35,    72,    73,
    29,    30,    31,    27,    28,    32,    33,    34,    29,    30,
    31,    27,    28,    32,    33,    34,    29,    30,    31,    27,
    28,    35,    29,    30,    31,    27,    28,   nil,   nil,    35,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    35,   nil,   nil,
   nil,   nil,   nil,    35,    29,    30,    31,    27,    28,    32,
    33,    34,    29,    30,    31,    27,    28,    32,    33,    34,
   nil,   nil,   nil,   nil,   nil,    35,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    35,    29,    30,    31,    27,    28,    32,
    33,    34,    29,    30,    31,    27,    28,    32,    33,    34,
   nil,   nil,   nil,   nil,    63,    35,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    35,    29,    30,    31,    27,    28,    32,
    33,    34,     7,    22,    18,   nil,    94,   nil,     8,   nil,
     9,    19,    20,    21,    23,    35,   nil,    24,    22,    18,
   nil,   nil,   nil,   nil,   nil,   nil,    19,    20,    21,    23,
   nil,   nil,    24,    46,     7,    22,    18,   nil,    77,   nil,
     8,    78,     9,    19,    20,    21,    23,   nil,   nil,    24,
     7,    22,    18,   nil,    80,   nil,     8,   nil,     9,    19,
    20,    21,    23,   nil,   nil,    24,     7,    22,    18,   nil,
   nil,   nil,     8,   nil,     9,    19,    20,    21,    23,   nil,
   nil,    24,     7,    22,    18,   nil,   nil,   nil,     8,   nil,
     9,    19,    20,    21,    23,   nil,   nil,    24,     7,    22,
    18,   nil,    90,   nil,     8,   nil,     9,    19,    20,    21,
    23,   nil,   nil,    24,     7,    22,    18,   nil,   nil,   nil,
     8,   nil,     9,    19,    20,    21,    23,   nil,   nil,    24,
     7,    22,    18,   nil,    93,   nil,     8,   nil,     9,    19,
    20,    21,    23,   nil,   nil,    24,     7,    22,    18,   nil,
   nil,   nil,     8,   nil,     9,    19,    20,    21,    23,    22,
    18,    24,   nil,   nil,   nil,   nil,   nil,    19,    20,    21,
    23,    22,    18,    24,   nil,   nil,   nil,   nil,   nil,    19,
    20,    21,    23,    22,    18,    24,   nil,   nil,   nil,   nil,
   nil,    19,    20,    21,    23,    22,    18,    24,   nil,   nil,
   nil,   nil,   nil,    19,    20,    21,    23,    22,    18,    24,
   nil,   nil,   nil,   nil,   nil,    19,    20,    21,    23,    22,
    18,    24,   nil,   nil,   nil,   nil,   nil,    19,    20,    21,
    23,   nil,   nil,    24,    22,    18,    65,   nil,   nil,   nil,
   nil,   nil,    19,    20,    21,    23,    22,    18,    24,   nil,
   nil,   nil,   nil,   nil,    19,    20,    21,    23,    22,    18,
    24,   nil,   nil,   nil,   nil,   nil,    19,    20,    21,    23,
    22,    18,    24,   nil,   nil,   nil,   nil,   nil,    19,    20,
    21,    23,    22,    18,    24,   nil,   nil,   nil,   nil,   nil,
    19,    20,    21,    23,    43,   nil,    24,    22,    18,   nil,
   nil,   nil,   nil,   nil,   nil,    19,    20,    21,    23,    22,
    18,    24,   nil,   nil,   nil,   nil,   nil,    19,    20,    21,
    23,    22,    18,    24,   nil,   nil,   nil,   nil,   nil,    19,
    20,    21,    23,    43,   nil,    24,    22,    18,   nil,   nil,
   nil,   nil,   nil,   nil,    19,    20,    21,    23,    22,    18,
    24,   nil,   nil,   nil,   nil,   nil,    19,    20,    21,    23,
    22,    18,    24,   nil,   nil,   nil,   nil,   nil,    19,    20,
    21,    23,    22,    18,    24,   nil,   nil,   nil,   nil,   nil,
    19,    20,    21,    23,    22,    18,    24,   nil,   nil,   nil,
   nil,   nil,    19,    20,    21,    23,    22,    18,    24,   nil,
   nil,   nil,   nil,   nil,    19,    20,    21,    23,   nil,   nil,
    24 ]

racc_action_check = [
    45,    45,    45,    45,    45,    45,    45,    45,    51,    51,
    51,     1,    53,    88,    57,    57,    57,    57,    57,    57,
    57,    45,     1,     1,     1,    47,    45,    52,     1,    51,
     1,     1,     1,     1,     1,    57,    47,     1,    38,    38,
    38,    38,    38,    38,    38,    38,    44,    38,    38,    38,
    50,    50,    50,    38,    44,    38,    38,    38,    38,    38,
    25,    54,    38,    37,    37,    37,    37,    37,    37,    37,
    37,    50,    37,    37,    37,    75,    22,    75,    37,    22,
    37,    37,    37,    37,    37,     7,    36,    37,    58,    58,
    58,    58,    58,    58,    58,    58,    79,    79,    79,    79,
    79,    79,    79,    79,    66,    59,    66,    59,   nil,    58,
    58,    58,   nil,   nil,   nil,   nil,   nil,    79,    79,    79,
    64,    64,    64,    64,    64,    64,    64,    64,    85,    85,
    85,    85,    85,    85,    85,    85,    56,    56,    56,    56,
    56,    64,    55,    55,    55,    55,    55,   nil,   nil,    85,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    56,   nil,   nil,
   nil,   nil,   nil,    55,     6,     6,     6,     6,     6,     6,
     6,     6,    42,    42,    42,    42,    42,    42,    42,    42,
   nil,   nil,   nil,   nil,   nil,     6,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    42,    83,    83,    83,    83,    83,    83,
    83,    83,    39,    39,    39,    39,    39,    39,    39,    39,
   nil,   nil,   nil,   nil,    39,    83,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    39,    82,    82,    82,    82,    82,    82,
    82,    82,    91,    91,    91,   nil,    91,   nil,    91,   nil,
    91,    91,    91,    91,    91,    82,   nil,    91,    24,    24,
   nil,   nil,   nil,   nil,   nil,   nil,    24,    24,    24,    24,
   nil,   nil,    24,    24,    60,    60,    60,   nil,    60,   nil,
    60,    60,    60,    60,    60,    60,    60,   nil,   nil,    60,
    62,    62,    62,   nil,    62,   nil,    62,   nil,    62,    62,
    62,    62,    62,   nil,   nil,    62,    74,    74,    74,   nil,
   nil,   nil,    74,   nil,    74,    74,    74,    74,    74,   nil,
   nil,    74,    78,    78,    78,   nil,   nil,   nil,    78,   nil,
    78,    78,    78,    78,    78,   nil,   nil,    78,    86,    86,
    86,   nil,    86,   nil,    86,   nil,    86,    86,    86,    86,
    86,   nil,   nil,    86,    87,    87,    87,   nil,   nil,   nil,
    87,   nil,    87,    87,    87,    87,    87,   nil,   nil,    87,
    89,    89,    89,   nil,    89,   nil,    89,   nil,    89,    89,
    89,    89,    89,   nil,   nil,    89,     0,     0,     0,   nil,
   nil,   nil,     0,   nil,     0,     0,     0,     0,     0,    73,
    73,     0,   nil,   nil,   nil,   nil,   nil,    73,    73,    73,
    73,    18,    18,    73,   nil,   nil,   nil,   nil,   nil,    18,
    18,    18,    18,    30,    30,    18,   nil,   nil,   nil,   nil,
   nil,    30,    30,    30,    30,    29,    29,    30,   nil,   nil,
   nil,   nil,   nil,    29,    29,    29,    29,    31,    31,    29,
   nil,   nil,   nil,   nil,   nil,    31,    31,    31,    31,    32,
    32,    31,   nil,   nil,   nil,   nil,   nil,    32,    32,    32,
    32,   nil,   nil,    32,    41,    41,    41,   nil,   nil,   nil,
   nil,   nil,    41,    41,    41,    41,    28,    28,    41,   nil,
   nil,   nil,   nil,   nil,    28,    28,    28,    28,    27,    27,
    28,   nil,   nil,   nil,   nil,   nil,    27,    27,    27,    27,
    40,    40,    27,   nil,   nil,   nil,   nil,   nil,    40,    40,
    40,    40,    23,    23,    40,   nil,   nil,   nil,   nil,   nil,
    23,    23,    23,    23,    23,   nil,    23,    33,    33,   nil,
   nil,   nil,   nil,   nil,   nil,    33,    33,    33,    33,     9,
     9,    33,   nil,   nil,   nil,   nil,   nil,     9,     9,     9,
     9,    61,    61,     9,   nil,   nil,   nil,   nil,   nil,    61,
    61,    61,    61,    61,   nil,    61,     8,     8,   nil,   nil,
   nil,   nil,   nil,   nil,     8,     8,     8,     8,    34,    34,
     8,   nil,   nil,   nil,   nil,   nil,    34,    34,    34,    34,
    35,    35,    34,   nil,   nil,   nil,   nil,   nil,    35,    35,
    35,    35,    68,    68,    35,   nil,   nil,   nil,   nil,   nil,
    68,    68,    68,    68,    69,    69,    68,   nil,   nil,   nil,
   nil,   nil,    69,    69,    69,    69,    71,    71,    69,   nil,
   nil,   nil,   nil,   nil,    71,    71,    71,    71,   nil,   nil,
    71 ]

racc_action_pointer = [
   365,    11,   nil,   nil,   nil,   nil,   162,    73,   554,   527,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   389,   nil,
   nil,   nil,    66,   500,   236,    60,   nil,   476,   464,   413,
   401,   425,   437,   515,   566,   578,    73,    61,    36,   200,
   488,   452,   170,   nil,    30,    -2,   nil,     9,   nil,   nil,
    48,     6,     4,   -11,    38,   140,   134,    12,    86,    93,
   253,   539,   269,   nil,   118,   nil,    90,   nil,   590,   602,
   nil,   614,   nil,   377,   285,    61,   nil,   nil,   301,    94,
   nil,   nil,   222,   192,   nil,   126,   317,   333,     1,   349,
   nil,   221,   nil,   nil,   nil ]

racc_action_default = [
   -49,   -49,    -1,    -3,    -4,    -5,    -6,   -49,   -49,   -49,
   -14,   -15,   -16,   -17,   -18,   -19,   -20,   -21,   -49,   -31,
   -32,   -33,   -34,   -49,   -49,   -49,    -2,   -49,   -49,   -49,
   -49,   -49,   -49,   -49,   -49,   -49,   -49,   -49,   -49,   -49,
   -49,   -49,   -44,   -38,   -49,   -49,   -42,   -49,   -46,    95,
   -23,   -24,   -25,   -26,   -27,   -28,   -29,   -30,   -49,   -49,
   -49,   -49,   -49,   -22,   -35,   -36,   -49,   -39,   -49,   -49,
   -43,   -49,   -40,   -49,   -49,   -49,    -9,   -11,   -49,   -44,
   -13,   -37,   -45,   -48,   -47,   -41,   -49,   -49,   -49,   -49,
    -7,   -49,   -10,   -12,    -8 ]

racc_goto_table = [
    26,    48,     1,    37,    38,    75,    66,    47,   nil,   nil,
   nil,   nil,   nil,    39,   nil,   nil,   nil,   nil,    42,    45,
   nil,   nil,    50,    51,    52,    53,    54,    55,    56,    57,
    58,   nil,   nil,   nil,   nil,    64,    42,   nil,   nil,    60,
    62,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    84,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    79,   nil,   nil,    26,
   nil,    26,   nil,    82,    83,   nil,    45,   nil,    85,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    86,   nil,   nil,   nil,
    89,   nil,   nil,   nil,   nil,    26,   nil,   nil,    26,    91,
    26 ]

racc_goto_check = [
     2,    18,     1,     6,     6,     7,    16,    17,   nil,   nil,
   nil,   nil,   nil,     6,   nil,   nil,   nil,   nil,     6,     6,
   nil,   nil,     6,     6,     6,     6,     6,     6,     6,     6,
     6,   nil,   nil,   nil,   nil,     6,     6,   nil,   nil,     1,
     1,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     6,   nil,   nil,     2,
   nil,     2,   nil,     6,     6,   nil,     6,   nil,     6,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     1,   nil,   nil,   nil,
     1,   nil,   nil,   nil,   nil,     2,   nil,   nil,     2,     1,
     2 ]

racc_goto_pointer = [
   nil,     2,    -1,   nil,   nil,   nil,    -5,   -54,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   -35,   -17,   -23 ]

racc_goto_default = [
   nil,   nil,     2,     3,     4,     5,     6,   nil,    10,    11,
    12,    13,    14,    15,    16,    17,    44,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 30, :_reduce_1,
  2, 30, :_reduce_2,
  1, 31, :_reduce_3,
  1, 31, :_reduce_4,
  1, 31, :_reduce_5,
  1, 31, :_reduce_6,
  6, 32, :_reduce_7,
  7, 32, :_reduce_8,
  1, 36, :_reduce_9,
  3, 36, :_reduce_10,
  4, 33, :_reduce_11,
  6, 33, :_reduce_12,
  4, 34, :_reduce_13,
  1, 35, :_reduce_14,
  1, 35, :_reduce_15,
  1, 35, :_reduce_16,
  1, 35, :_reduce_17,
  1, 35, :_reduce_18,
  1, 35, :_reduce_19,
  1, 35, :_reduce_20,
  1, 35, :_reduce_21,
  3, 35, :_reduce_22,
  3, 35, :_reduce_23,
  3, 35, :_reduce_24,
  3, 35, :_reduce_25,
  3, 35, :_reduce_26,
  3, 35, :_reduce_27,
  3, 35, :_reduce_28,
  3, 35, :_reduce_29,
  3, 35, :_reduce_30,
  1, 37, :_reduce_31,
  1, 37, :_reduce_32,
  1, 37, :_reduce_33,
  1, 38, :_reduce_34,
  3, 39, :_reduce_35,
  3, 40, :_reduce_36,
  4, 40, :_reduce_37,
  2, 41, :_reduce_38,
  3, 41, :_reduce_39,
  4, 42, :_reduce_40,
  5, 43, :_reduce_41,
  2, 44, :_reduce_42,
  3, 44, :_reduce_43,
  1, 45, :_reduce_44,
  3, 45, :_reduce_45,
  1, 46, :_reduce_46,
  3, 46, :_reduce_47,
  3, 47, :_reduce_48 ]

racc_reduce_n = 49

racc_shift_n = 95

racc_token_table = {
  false => 0,
  :error => 1,
  "*" => 2,
  "/" => 3,
  "%" => 4,
  "+" => 5,
  "-" => 6,
  ">" => 7,
  "<" => 8,
  "==" => 9,
  "=" => 10,
  "def" => 11,
  :IDENTIFIER => 12,
  "(" => 13,
  ")" => 14,
  "end" => 15,
  "," => 16,
  "if" => 17,
  "else" => 18,
  "while" => 19,
  :NUMBER => 20,
  :STRING => 21,
  :BOOL => 22,
  "[" => 23,
  "]" => 24,
  "]=" => 25,
  "{" => 26,
  "}" => 27,
  "=>" => 28 }

racc_nt_base = 29

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\"<\"",
  "\"==\"",
  "\"=\"",
  "\"def\"",
  "IDENTIFIER",
  "\"(\"",
  "\")\"",
  "\"end\"",
  "\",\"",
  "\"if\"",
  "\"else\"",
  "\"while\"",
  "NUMBER",
  "STRING",
  "BOOL",
  "\"[\"",
  "\"]\"",
  "\"]=\"",
  "\"{\"",
  "\"}\"",
  "\"=>\"",
  "$start",
  "stmts",
  "stmt",
  "func_def",
  "if_stmt",
  "while_stmt",
  "expr",
  "arg_vars",
  "literal",
  "var_ref",
  "var_assign",
  "func_call",
  "ary_new",
  "ary_ref",
  "ary_assign",
  "hash_new",
  "exprs",
  "pairs",
  "pair" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parse.y', 12)
  def _reduce_1(val, _values)
                  ["stmts", val.fetch(0)]
            
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 16)
  def _reduce_2(val, _values)
                  ["stmts", *val.fetch(0)[1..-1], val.fetch(1)]
            
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 19)
  def _reduce_3(val, _values)
     val.fetch(0) 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 20)
  def _reduce_4(val, _values)
     val.fetch(0) 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 21)
  def _reduce_5(val, _values)
     val.fetch(0) 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 22)
  def _reduce_6(val, _values)
     val.fetch(0) 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 26)
  def _reduce_7(val, _values)
                     ["func_def", val.fetch(1), [], val.fetch(4)]
               
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 30)
  def _reduce_8(val, _values)
                     ["func_def", val.fetch(1), val.fetch(3), val.fetch(5)]
               
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 35)
  def _reduce_9(val, _values)
                     [val.fetch(0)]
               
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 39)
  def _reduce_10(val, _values)
                     val.fetch(0) + [val.fetch(2)]
               
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 44)
  def _reduce_11(val, _values)
                    ["if", val.fetch(1), val.fetch(2)]
              
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 48)
  def _reduce_12(val, _values)
                    ["if", val.fetch(1), val.fetch(2), val.fetch(4)]
              
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 53)
  def _reduce_13(val, _values)
                       ["while", val.fetch(1), val.fetch(2)]
                 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 56)
  def _reduce_14(val, _values)
     val.fetch(0) 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 57)
  def _reduce_15(val, _values)
     val.fetch(0) 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 58)
  def _reduce_16(val, _values)
     val.fetch(0) 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 59)
  def _reduce_17(val, _values)
     val.fetch(0) 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 60)
  def _reduce_18(val, _values)
     val.fetch(0) 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 61)
  def _reduce_19(val, _values)
     val.fetch(0) 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 62)
  def _reduce_20(val, _values)
     val.fetch(0) 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 63)
  def _reduce_21(val, _values)
     val.fetch(0) 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 64)
  def _reduce_22(val, _values)
     val.fetch(1) 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 65)
  def _reduce_23(val, _values)
     [val.fetch(1), val.fetch(0), val.fetch(2)] 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 66)
  def _reduce_24(val, _values)
     [val.fetch(1), val.fetch(0), val.fetch(2)] 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 67)
  def _reduce_25(val, _values)
     [val.fetch(1), val.fetch(0), val.fetch(2)] 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 68)
  def _reduce_26(val, _values)
     [val.fetch(1), val.fetch(0), val.fetch(2)] 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 69)
  def _reduce_27(val, _values)
     [val.fetch(1), val.fetch(0), val.fetch(2)] 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 70)
  def _reduce_28(val, _values)
     [val.fetch(1), val.fetch(0), val.fetch(2)] 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 71)
  def _reduce_29(val, _values)
     [val.fetch(1), val.fetch(0), val.fetch(2)] 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 72)
  def _reduce_30(val, _values)
     [val.fetch(1), val.fetch(0), val.fetch(2)] 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 76)
  def _reduce_31(val, _values)
                    ["lit", val.fetch(0)]
              
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 80)
  def _reduce_32(val, _values)
                    ["lit", val.fetch(0)]
              
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 84)
  def _reduce_33(val, _values)
                    ["lit", val.fetch(0)]
              
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 89)
  def _reduce_34(val, _values)
                    ["var_ref", val.fetch(0)]
              
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 94)
  def _reduce_35(val, _values)
                       ["var_assign", val.fetch(0), val.fetch(2)]
                 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 99)
  def _reduce_36(val, _values)
                      ["func_call", val.fetch(0), []]
                
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 104)
  def _reduce_37(val, _values)
                      ["func_call", val.fetch(0), val.fetch(2)]
                
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 109)
  def _reduce_38(val, _values)
                    ["ary_new"]
              
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 113)
  def _reduce_39(val, _values)
                    p val[1]
                ["ary_new", *val.fetch(1)]
              
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 119)
  def _reduce_40(val, _values)
                    ["ary_ref", val.fetch(0), val.fetch(2)]
              
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 124)
  def _reduce_41(val, _values)
                       ["ary_assign", val.fetch(0), val.fetch(2), val.fetch(4)]
                 
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 129)
  def _reduce_42(val, _values)
                     ["hash_new"]
               
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 133)
  def _reduce_43(val, _values)
                     ["hash_new", *val.fetch(1)]
               
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 138)
  def _reduce_44(val, _values)
                  val.fetch(0)
            
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 142)
  def _reduce_45(val, _values)
                  if val.fetch(0).first.is_a?(Array)
                val.fetch(0) + [val.fetch(2)]
              else
                [val.fetch(0), val.fetch(2)]
              end
            
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 151)
  def _reduce_46(val, _values)
                  val.fetch(0)
            
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 155)
  def _reduce_47(val, _values)
                  val.fetch(0) + val.fetch(2)
            
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 160)
  def _reduce_48(val, _values)
                 [val.fetch(0), val.fetch(2)]
           
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser
